# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

jobs:
- job: Linux
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get install doxygen
  - script: |
      mkdir -p build && cd build && cmake $CMAKE_OPTIONS ..
    displayName: 'cmake'
  - script: |
      cd build && make && cp -R src/libmkldnn.so* $(Build.ArtifactStagingDirectory)/
    displayName: 'make'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: build
  - script: |
      cd build && ctest
    displayName: 'ctest'

- job: MacOS
  timeoutInMinutes: 0
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: |
      mkdir -p build && cd build && cmake $CMAKE_OPTIONS ..
    displayName: 'cmake'
  - script: |
      cd build && make ; cp -R src/lib* $(Build.ArtifactStagingDirectory)/ || ls -al src
    displayName: 'make'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: build
    displayName: 'make'
  - script: |
      cd build && ctest
    displayName: 'ctest'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: cd scripts && call prepare_mkl.bat && cd ..
  - script: mkdir build & cd build && cmake -G "Visual Studio 15 2017 Win64" ..
  - task: MSBuild@1
    inputs:
      solution: 'build\Intel(R) MKL-DNN.sln'
      msbuildArchitecture: 'x64'
      configuration: 'Release'
      clean: true
  - script: |
      cd build && ctest
    displayName: 'ctest'